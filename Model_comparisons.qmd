---
title: "Alternate composite models"
format: pdf
editor: visual
execute: 
  echo: false
  error: false
  message: false
  warning: false
---

## Goal

To compare alternative models for estimating the composite species indicators used in the State of Canada's Birds, i.e., the "Summary Models" for the State of Canada's Birds. These indicators are intended to represent the mean status of species within a group through time; e.g., the mean overall change in grassland bird populations since 1970, for all years from 1970 through the present.

```{r}
library(tidyverse)
library(cmdstanr)
source("functions/GAM_basis_function_mgcv.R")
  q2_5 <- function(x)c(q2_5 = quantile(x,probs = c(0.025),
                                       names = FALSE))
    q97_5 <- function(x)c(q97_5 = quantile(x,probs = c(0.975),
                                       names = FALSE))
    
    base_year <- 1970

```

## Conceptual steps

The modeling effort needs to start with estimated population trajectories for each species, smooth the population trajectories, calculate the index values to support a given summary model, fit the summary models, and plot the resulting indicators.

### Load estimated trajectories

Here, just using output from the BBS as an example.

```{r}
#| eval: false
#| echo: true


all_bbs_inds <- read_csv("c:/github/CWS_2022_BBS_Analyses/website/BBS_2022_annual_indices_for_socb.csv") %>% 
  filter(area_name == "Canada",
         period == "Long-term") 

saveRDS(all_bbs_inds,"data/Canadian_BBS_indices.rds")

```

```{r}
#|echo: false
#|eval: false
#|
bbs_canadian_indices <- readRDS("data/Canadian_BBS_indices.rds")
socb_groups_2019 <- read_csv("data/SOCB Data Sources_Source de donnees EPOC.csv")

grassland_sp <- socb_groups_2019 %>% 
  select(c(1,13)) %>% 
  rename(english = 'English Name_Nom anglais',
         grassland = 'Grassland Birds _Oiseaux de prairie') %>% 
  filter(grassland == "Included_Inclus") %>% 
  select(english) %>% 
  unlist()

```

Selecting out the grassland bird annual indices of abundance from the BBS. Then log-transforming the index values and calculating a log-scale standard error of the indices by transforming the credible limits and approximating the standard error as the credible interval width divided by 3.9 (assuming an approximately normal 95 percent CI).

#### Constant number of species

The code below generates the input data for the smoothing model and the *Constant* scenario, where the number of species in the indicator is constant across all years because each species has data in all years.

```{r}
#| echo: true

grassland_inds <- bbs_canadian_indices %>% 
  filter(species_name %in% grassland_sp,
         !is.na(index)) %>% 
  mutate(ln_index = log(index),
         ln_lci = log(lower_ci),
         ln_uci = log(upper_ci),
         ln_index_sd = (ln_uci-ln_lci)/3.9) %>% 
  group_by(species_name) %>% 
    mutate(yearn = year-(min(year)-1)) %>% # sets a yearn value specific to each species
  arrange(species_name,year)

saveRDS(grassland_inds,"data/grassland_inds.rds")
```

#### Variable number of species

To demonstrate how each model handles missing data, we can create an identical dataset where five of the species do not have monitoring data across the entire time-series. The code below removes the first 20-years of data for five of the species in the grassland birds indicator. These data form the raw data for the *Variable* graph facet in Figure 1.

```{r}
#| echo: true

grassland_inds <- bbs_canadian_indices %>% 
  filter(species_name %in% grassland_sp,
         !is.na(index),
         !((species_code == "AMKE" & year < 1990) |
             (species_code == "BOBO" & year < 1990) |
             (species_code == "CCLO" & year < 1990) |
             (species_code == "VESP" & year < 1990) |
             (species_code == "GRSP" & year < 1990))) %>% 
  mutate(ln_index = log(index),
         ln_lci = log(lower_ci),
         ln_uci = log(upper_ci),
         ln_index_sd = (ln_uci-ln_lci)/3.9) %>% 
  group_by(species_name) %>% 
    mutate(yearn = year-(min(year)-1)) %>% # sets a yearn value specific to each species
  arrange(species_name,year)

saveRDS(grassland_inds,"data/grassland_inds_w_missing.rds")


```

### Smooth indices accounting for uncertainty

We want the composite indicators to track long- and medium-term changes in populations that are shared across many species in a group. Sharp annual fluctuations may represent true variation in the species' population, but they can mask the longer term changes that are primary interest of this high-level summary. Following previous State of Canada's Birds reports, we use a generalized additive model (GAM) that accounts for the uncertainty of each estimated annual index of abundance with a measurement-error structure. Fitting this GAM for each species generates smooth population trajectories. Within the GAM, we can estimate the log-scale input data for the two composite summary models. The code is not shown here, but the process involves log-transforming the annual indices of abundance for each species and year, then fitting the smooth GAM to each species separately, and then calculating the input data representing the change since the species first year of data for the standard model and the series of annual differences to generate the input data

```{r}
#| eval: false

for(j in c(1,2)){
  if(j == 1){
grassland_inds <- readRDS("data/grassland_inds_w_missing.rds")
  }else{
 grassland_inds <- readRDS("data/grassland_inds.rds")
}
smooth_inds_out <- NULL
for(species in grassland_sp){
  
  if(species %in% grassland_inds$species_name){
  inds <- grassland_inds %>% 
    filter(species_name == species) %>% 
    select(species_name,year,
           ln_index,ln_index_sd,yearn) 
  
  n_years <- as.integer(length(min(inds$year):max(inds$year)))
  n_indices <- as.integer(nrow(inds))
  n_knots <- as.integer(round(n_indices/3))
  
  
    gam_data <- gam_basis(inds$yearn,
                          nknots = n_knots,
                          sm_name = "year")
    stan_data <- list(
      n_years = n_years,
      n_indices = n_indices,
      n_knots_year = gam_data$nknots_year,
      year = inds$yearn,
      ln_index = inds$ln_index,
      ln_index_sd = inds$ln_index_sd,
      year_basis = gam_data$year_basis
    )
      ## fit model with cmdstanr
  file <- "models/GAM_smooth_model.stan"
  mod <- cmdstan_model(file)
  
  fit <- mod$sample(data = stan_data,
                    parallel_chains = 4,
                    refresh = 0,
                    adapt_delta = 0.95)

  sum <- fit$summary(variables = NULL,
                     "mean",
                     "sd",
                     "ess_bulk",
                     "rhat",
                     q2_5 = q2_5,
                     q97_5 = q97_5)
  
  mx_rhat <- max(sum$rhat,na.rm = TRUE)
  if(mx_rhat > 1.05){
      fit <- mod$sample(data = stan_data,
                    parallel_chains = 4,
                    iter_warmup = 8000,
                    iter_sampling = 8000,
                    thin = 8,
                    refresh = 0)
  sum <- fit$summary(variables = NULL,
                     "mean",
                     "sd",
                     "ess_bulk",
                     "rhat",
                     q2_5 = q2_5,
                     q97_5 = q97_5)
  }
  smooth_inds <- sum %>% 
    filter(grepl("mu",variable)) %>% 
    mutate(yearn = as.integer(str_extract_all(variable,
                                   "[[:digit:]]{1,}",
                                   simplify = TRUE)),
           species_name = species,
           smooth_ind = mean,
           smooth_ind_sd = sd,
           smooth_ind_lci = q2_5,
           smooth_ind_uci = q97_5) %>% 
    select(species_name,yearn,smooth_ind,smooth_ind_sd,
           smooth_ind_lci,smooth_ind_uci) 
  
  diffs <- sum %>% 
    filter(grepl("annual_diffs",variable)) %>% 
    mutate(yearn = as.integer(str_extract_all(variable,
                                   "[[:digit:]]{1,}",
                                   simplify = TRUE)),
           annual_diff = mean,
           annual_diff_sd = sd) %>% 
    select(yearn,annual_diff,annual_diff_sd) 
  
  scaled_status <- sum %>% 
    filter(grepl("scaled_status",variable)) %>% 
    mutate(yearn = as.integer(str_extract_all(variable,
                                   "[[:digit:]]{1,}",
                                   simplify = TRUE)),
           scaled_status = mean,
           scaled_status_sd = sd) %>% 
    select(yearn,scaled_status,scaled_status_sd) 
  
  scaled_log_status <- sum %>% 
    filter(grepl("scaled_log_status",variable)) %>% 
    mutate(yearn = as.integer(str_extract_all(variable,
                                   "[[:digit:]]{1,}",
                                   simplify = TRUE)),
           scaled_log_status = (mean),
           scaled_log_status_sd = sd) %>% 
    select(yearn,scaled_log_status,scaled_log_status_sd) 
  
  
  smooth_inds <- smooth_inds %>% 
    inner_join(.,diffs,
               by = c("yearn"))%>% 
    inner_join(.,scaled_status,
               by = c("yearn"))%>% 
    inner_join(.,scaled_log_status,
               by = c("yearn"))
  
  smooth_inds_out <- bind_rows(smooth_inds_out,smooth_inds)
  
  print(paste(species,"complete"))
  }else{
    print(paste(species,"missing data"))
  }
  

  }

grassland_inds <- grassland_inds %>% 
  inner_join(.,smooth_inds_out,
             by = c("species_name","yearn"))

if(j == 1){
saveRDS(grassland_inds,"grassland_smoothed_indices_w_missing.rds")
}else{
 saveRDS(grassland_inds,"grassland_smoothed_indices.rds")
}

}
   tmp <- grassland_inds

 tst <- ggplot(data = tmp)+
   geom_pointrange(aes(x = year, y = ln_index,
                       ymin = ln_lci,ymax = ln_uci),
                   size = 0.1)+
   geom_ribbon(aes(x = year, ymin = smooth_ind_lci,
                   ymax = smooth_ind_uci),
               alpha = 0.2)+
   geom_line(aes(y = smooth_ind,x = year),colour = "red")+
   # geom_line(aes(x = year, y = annual_diff))+
   # geom_line(aes(x = year, y = scaled_status), colour = "blue")+
   # geom_line(aes(x = year, y = scaled_log_status))+
   facet_wrap(vars(species_name),
              scales = "free_y")
 tst

```

## Apply the composite summary models

There are two conceptual models to compare here:

### Standard model

The Standard model has been used in previous SoCB reports and estimates the annual values of the mean change since the first year of data across species. Data are the log-scaled indices of annual status relative to a base-year (usually 1970) for each species. The model estimates the mean change since the base-year across all species, and independently in each year.

```{r}
#| eval: false

for(j in c(1,2)){
  if(j == 1){
grassland_inds <- readRDS("grassland_smoothed_indices_w_missing.rds")
}else{
grassland_inds <- readRDS("grassland_smoothed_indices.rds")
}

inds <- grassland_inds %>% 
  mutate(species_code_fct = factor(species_code),
         species_ind = as.integer(species_code_fct)) %>% 
  arrange(yearn,species_id)


base_year <- min(inds$year)

### Drop the base-year values
inds <- inds %>% 
  group_by(species_ind) %>% 
  mutate(yearn2 = year-base_year) %>% 
  filter(yearn2 > 0,
         scaled_log_status_sd > 0,
         scaled_status_sd > 0,
         annual_diff_sd > 0)

## track the start and end years for each species
sp_y <- inds %>% 
  group_by(species_id,species_code,species_ind) %>% 
  summarise(first_year = min(year),
            last_year = max(year),
            first_yearn2 = min(yearn2),
            last_yearn2 = max(yearn2),
            .groups = "drop") %>% 
  mutate()

# number of years and species
n_years <- max(inds$yearn2,na.rm = TRUE)
n_species <- max(inds$species_ind,na.rm = TRUE)


## set-up the empty data matrices and vectors for the Stan model

# list of species indicators included in each year
species <- matrix(data = NA,
                  nrow = n_years,
                  ncol = n_species) 
# matrix of index values for each year by species
ln_index <- matrix(data = 0,
                  nrow = n_years,
                  ncol = n_species)
# matrix of index SE values for each year by species
ln_index_sd <- matrix(data = 99, # large, non-zero value - ignored by model
                  nrow = n_years,
                  ncol = n_species)
# number of species with data in each year
n_species_year <- vector("integer",length = n_years)

## fill the data matrices and vectors
for(y in 1:n_years){
  tmp <- inds %>% 
    filter(yearn2 == y) %>% 
    arrange(species_id)
  n_sp <- nrow(tmp)
  sp_inc <- as.integer(tmp$species_ind)
  species[y,1:n_sp] <- sp_inc
  if(n_sp < n_species){
    sp_miss <- c(1:n_species)[-sp_inc]
  species[y,c((n_sp+1):n_species)] <- sp_miss
  }
    n_species_year[y] <- n_sp
  for(s in sp_inc){
  ln_index[y,s] <- as.numeric(tmp[which(tmp$species_ind == s & tmp$yearn2 == y),"scaled_status"]) 
    ln_index_sd[y,s] <- as.numeric(tmp[which(tmp$species_ind == s & tmp$yearn2 == y),"scaled_status_sd"]) 
  }
}

stan_data <- list(n_years = n_years,
                  n_species = n_species,
                  n_species_year = n_species_year,
                  species = species,
                  ln_index = ln_index,
                  ln_index_sd = ln_index_sd)


## fit Standard Stan model
 file <- "models/State_of_Birds_Model_standard.stan"
  mod <- cmdstan_model(file)
  
  fit <- mod$sample(data = stan_data,
                    parallel_chains = 4,
                    refresh = 0,
                    adapt_delta = 0.8)

  sum <- fit$summary(variables = NULL,
                     "mean",
                     "sd",
                     "ess_bulk",
                     "rhat",
                     q2_5 = q2_5,
                     q97_5 = q97_5)
  
  mx_rhat <- max(sum$rhat,na.rm = TRUE)
  if(mx_rhat > 1.05){ # if not converged run again with more iterations
      fit <- mod$sample(data = stan_data,
                    parallel_chains = 4,
                    iter_warmup = 8000,
                    iter_sampling = 8000,
                    thin = 8,
                    refresh = 0)
  sum <- fit$summary(variables = NULL,
                     "mean",
                     "sd",
                     "ess_bulk",
                     "rhat",
                     q2_5 = q2_5,
                     q97_5 = q97_5)
  }
 
  annual_status_standard <- sum %>% 
    filter(grepl("annual_status",variable)) %>% 
    mutate(yearn2 = as.integer(str_extract_all(variable,
                                   "[[:digit:]]{1,}",
                                   simplify = TRUE)),
           model = "standard")
  
  if(j == 1){
  saveRDS(annual_status_standard,"output/annual_status_standard_w_missing.rds") }else{
  saveRDS(annual_status_standard,"output/annual_status_standard.rds")    
  }
  
}
  
 
  
```

### The differences model

The Difference model estimates the cumulative change over time by estimating the annual mean difference from the previous year across species, and then summing those annual mean differences through time. Data are the time series of log-scale annual differences for each species; i.e., the difference between the species' index in year(t) minus the index in year(t-1). The model estimates the mean across all species of those annual differences for each year, and then estimates the time-series of the mean composite indicator by fixing the value of the first year at 0, then summing the mean annual differences through time.

```{r}
#| eval: false
#| 
  ##### fit same model to data without missing species
  for(j in c(1,2)){
  if(j == 1){
grassland_inds <- readRDS("grassland_smoothed_indices_w_missing.rds")
}else{
grassland_inds <- readRDS("grassland_smoothed_indices.rds")
}

inds <- grassland_inds %>% 
  mutate(species_code_fct = factor(species_code),
         species_ind = as.integer(species_code_fct)) %>% 
  arrange(yearn,species_id)


base_year <- min(inds$year)

### Drop the base-year values
inds <- inds %>% 
  group_by(species_ind) %>% 
  mutate(yearn2 = year-base_year) %>% 
  filter(yearn2 > 0,
         scaled_log_status_sd > 0,
         scaled_status_sd > 0,
         annual_diff_sd > 0)

## track the start and end years for each species
sp_y <- inds %>% 
  group_by(species_id,species_code,species_ind) %>% 
  summarise(first_year = min(year),
            last_year = max(year),
            first_yearn2 = min(yearn2),
            last_yearn2 = max(yearn2),
            .groups = "drop") %>% 
  mutate()

# number of years and species
n_years <- max(inds$yearn2,na.rm = TRUE)
n_species <- max(inds$species_ind,na.rm = TRUE)


species <- matrix(data = NA,
                  nrow = n_years,
                  ncol = n_species)
ln_index <- matrix(data = 0,
                  nrow = n_years,
                  ncol = n_species)
ln_index_sd <- matrix(data = 0,
                  nrow = n_years,
                  ncol = n_species)
n_species_year <- vector("integer",length = n_years)
for(y in 1:n_years){
  tmp <- inds %>% 
    filter(yearn2 == y) %>% 
    arrange(species_id)
  n_sp <- nrow(tmp)
  sp_inc <- as.integer(tmp$species_ind)
  species[y,1:n_sp] <- sp_inc
  if(n_sp < n_species){
    sp_miss <- c(1:n_species)[-sp_inc]
  species[y,c((n_sp+1):n_species)] <- sp_miss
  }
    n_species_year[y] <- n_sp
  for(s in sp_inc){
  ln_index[y,s] <- as.numeric(tmp[which(tmp$species_ind == s & tmp$yearn2 == y),"annual_diff"]) 
    ln_index_sd[y,s] <- as.numeric(tmp[which(tmp$species_ind == s & tmp$yearn2 == y),"annual_diff_sd"]) 
  }
}

stan_data2 <- list(n_years = n_years,
                  n_species = n_species,
                  n_species_year = n_species_year,
                  species = species,
                  ln_index = ln_index,
                  ln_index_sd = ln_index_sd)


 file2 <- "models/State_of_Birds_Model_differences.stan"
  mod2 <- cmdstan_model(file2)
  
  fit2 <- mod2$sample(data = stan_data2,
                    parallel_chains = 4,
                    refresh = 0,
                    adapt_delta = 0.8)

  sum2 <- fit2$summary(variables = NULL,
                     "mean",
                     "sd",
                     "ess_bulk",
                     "rhat",
                     q2_5 = q2_5,
                     q97_5 = q97_5)
  
  mx_rhat2 <- max(sum2$rhat,na.rm = TRUE)
  if(mx_rhat > 1.05){
      fit2 <- mod$sample(data = stan_data2,
                    parallel_chains = 4,
                    iter_warmup = 8000,
                    iter_sampling = 8000,
                    thin = 8,
                    refresh = 0)
  sum2 <- fit2$summary(variables = NULL,
                     "mean",
                     "sd",
                     "ess_bulk",
                     "rhat",
                     q2_5 = q2_5,
                     q97_5 = q97_5)
  }
 
  annual_status_difference <- sum2 %>% 
    filter(grepl("annual_status",variable)) %>% 
    mutate(yearn2 = as.integer(str_extract_all(variable,
                                   "[[:digit:]]{1,}",
                                   simplify = TRUE)),
           model = "difference")
  
  sigma1 <- sum %>% 
    filter(grepl("sigma",variable))
  sigma2 <- sum2 %>% 
    filter(grepl("sigma",variable))
  
  if(j == 1){
  saveRDS(annual_status_difference,"output/annual_status_difference_w_missing.rds")
  }else{
   saveRDS(annual_status_difference,"output/annual_status_difference.rds")   
  }

  
  }

```

### Compare model outputs

```{r}
#| fig-cap: "Comparison of two model for calculating the composite group indicator trajectories for State of Canada's Birds (SoCB). The facet on the left demonstrates that the models generate very similar mean trajectories when all species have data in all years. The facet on the right demonstrates the effect having a variable number of species through time. In the right facet, the data for five species from the first 20 years have been removed, and so their data enter the model in 1991"


brks_pch <- c(-95,-90,-75,-50,-25,0,25,50,100,200,300,500)
brks_log <- log((brks_pch/100)+1)
brks_labs <- paste0(brks_pch,"%")

annual_status_difference <- readRDS("output/annual_status_difference.rds") %>% 
  mutate(model = "Difference",
         n_species = "Constant")
annual_status_difference_miss <- readRDS("output/annual_status_difference_w_missing.rds")%>% 
  mutate(model = "Difference",
         n_species = "Variable")

annual_status_standard <- readRDS("output/annual_status_standard.rds")%>% 
  mutate(model = "Standard",
         n_species = "Constant")
annual_status_standard_miss <- readRDS("output/annual_status_standard_w_missing.rds")%>% 
  mutate(model = "Standard",
         n_species = "Variable")


annual_status_compare <- annual_status_difference %>% 
    bind_rows(.,annual_status_standard) %>% 
  bind_rows(.,annual_status_difference_miss) %>% 
  bind_rows(.,annual_status_standard_miss) %>% 
  mutate(year = yearn2 + (base_year),
         percent_diff = (exp(mean)-1)*100,
         percent_diff_lci = (exp(q2_5)-1)*100,
         percent_diff_uci = (exp(q97_5)-1)*100)

tst <- ggplot(data = annual_status_compare)+
  geom_ribbon(aes(x = year,y = mean,
                ymin = q2_5,ymax = q97_5,
                  fill = model),
              alpha = 0.3)+
  geom_line(aes(x = year,y = mean,
                colour = model))+
  scale_y_continuous(breaks = brks_log,
                     labels = brks_labs)+
  scale_colour_viridis_d(aesthetics = c("colour","fill"))+
  facet_wrap(vars(n_species))

tst
```

The standard model and the cumulative difference model generate very similar mean trajectories when the number of species is constant across all years (left panel, Figure 1). By contrast, the step-change in year 21 in the standard model results when the number of species varies through time (right panel, Figure 1) reflects the addition of the five species with missing data until 1990. Because these species have no data from before 1990, it is not possible to estimate a change since 1970. As a result, data for these five species represent the change since 1990 (i.e., in 1991, these species' input data reflect change over only 1 year, and so pull the mean indicator value back towards 0). In the cumulative difference model, there is no abrupt step-change because these species' input data in 1991 reflect the same metric as all other species: the change since 1990.

The treatment of uncertainty is worth revisiting for these models, as they clearly estimate different aspects of the uncertainty. On a related note, the entire assessment could be combined into a single hierarchical GAM, where the input data are the species annual indices and their SE. A model with species-level intercepts, hierarchical smooths for each species, and a global mean smooth, should generate the same overall mean trajectory. This treatment could more easily propagate the uncertainty, and could generate smoothed species-level trajectories as well as explicit predictions for a hypothetical "new" species (or a species with missing data).
